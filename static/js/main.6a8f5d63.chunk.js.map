{"version":3,"sources":["components/Homepage/Homepage.tsx","components/NavBar/NavBar.tsx","components/PageError/PageError.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonLink/helper.ts","components/People/People.tsx","App.tsx","index.tsx"],"names":["Homepage","memo","className","NavBar","role","isActive","cn","to","PageError","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","isSelected","useMemo","sex","name","born","died","mother","motherName","father","fatherName","getPersonByName","array","find","man","People","useState","people","setPeople","isError","setError","isLoading","setLoading","isPeopleLoaded","setPeopleLoaded","useParams","loadPeople","useCallback","peopleFromServer","useEffect","peopleWithParents","map","_","arr","isLoadedPeopleExist","length","isLoadedPeopleNotExist","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6a8f5d63.chunk.js","sourcesContent":["import { FC, memo } from 'react';\n\nexport const Homepage: FC = memo(\n  () => {\n    return (\n      <h1 className=\"title\">Home Page</h1>\n    );\n  },\n);\n","import { FC, memo } from 'react';\nimport {\n  NavLink,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const NavBar: FC = memo(\n  () => {\n    return (\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => {\n                return cn(\n                  'navbar-item',\n                  { 'has-background-grey-lighter': isActive },\n                );\n              }}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => {\n                return cn(\n                  'navbar-item',\n                  { 'has-background-grey-lighter': isActive },\n                );\n              }}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n    );\n  },\n);\n","import { FC, memo } from 'react';\n\nexport const PageError: FC = memo(\n  () => {\n    return (\n      <h1 className=\"title\">Page not found</h1>\n    );\n  },\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { FC, memo, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport interface Props {\n  person: Person;\n  slug: string;\n}\n\nexport const PersonLink: FC<Props> = memo(\n  ({ person, slug }) => {\n    const isSelected = useMemo(() => slug === person.slug, [slug, person]);\n\n    return (\n      <tr\n        className={cn(\n          { 'has-background-warning': isSelected },\n        )}\n        data-cy=\"person\"\n      >\n        <td>\n          <Link\n            className={cn({ 'has-text-danger': person.sex === 'f' })}\n            to={`/people/${person.slug}`}\n          >\n            {person.name}\n          </Link>\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>\n          {person.mother\n            ? (\n              <Link\n                className=\"has-text-danger\"\n                to={`/people/${person.mother.slug}`}\n              >\n                {person.motherName}\n              </Link>\n            )\n            : person.motherName || '-'}\n        </td>\n        <td>\n          {person.father\n            ? (\n              <Link\n                className=\"class\"\n                to={`/people/${person.father.slug}`}\n              >\n                {person.fatherName}\n              </Link>\n            )\n            : person.fatherName || '-'}\n        </td>\n      </tr>\n    );\n  },\n);\n","import { Person } from '../../types';\n\nexport const getPersonByName = (array: Person[], name: string | null) => {\n  return array.find(man => man.name === name);\n};\n","import {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { PersonLink } from '../PersonLink';\nimport { getPersonByName } from '../PersonLink/helper';\n\nexport const People: FC = memo(\n  () => {\n    const [people, setPeople] = useState<Person[]>([]);\n    const [isError, setError] = useState(false);\n    const [isLoading, setLoading] = useState(false);\n    const [isPeopleLoaded, setPeopleLoaded] = useState(false);\n\n    const { slug = '' } = useParams();\n\n    const loadPeople = useCallback(\n      async () => {\n        setLoading(true);\n\n        try {\n          const peopleFromServer = await getPeople();\n\n          setPeople(peopleFromServer);\n          setPeopleLoaded(true);\n        } catch (error) {\n          setError(true);\n        } finally {\n          setLoading(false);\n        }\n      }, [],\n    );\n\n    useEffect(() => {\n      loadPeople();\n    }, []);\n\n    const peopleWithParents = useCallback(\n      () => {\n        return people.map((person, _, arr) => ({\n          ...person,\n          mother: getPersonByName(arr, person.motherName),\n          father: getPersonByName(arr, person.fatherName),\n        }));\n      }, [people],\n    );\n\n    // this comment for github because in the last commit smt went wrong\n\n    const isLoadedPeopleExist = isPeopleLoaded && people.length;\n    const isLoadedPeopleNotExist = isPeopleLoaded && !people.length;\n\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading && <Loader />}\n\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {isLoadedPeopleNotExist && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n            {isLoadedPeopleExist && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {peopleWithParents().map(person => (\n                    <PersonLink\n                      key={person.slug}\n                      person={person}\n                      slug={slug}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  },\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { Homepage } from './components/Homepage';\nimport { NavBar } from './components/NavBar';\nimport { PageError } from './components/PageError';\nimport { People } from './components/People';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"*\" element={<PageError />} />\n\n          <Route path=\"/\" element={<Homepage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<People />} />\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}